Numpy 패키지 함수와 속성
- 배열 속성
   dtype : 요소들의 type
   itemsize : 요소의 bytesize
   ndim : 차원수(축수)
   size : 배열 요소 개수
   shape : 배열 구조(튜플)
- 배열 생성 함수
  np.array(obj, dtype, copy=T)
  np.array(obj, dtype, copy=T).reshape(구조) # reshape(3,3,3)  3차원
  np.ones( tup, dtype )  # 기본값 1로 들어감. 
  np.zeros( tup, dtype ) # 기본값 0으로 들어감.
  np.full( tup, 초기화 )  # 초기화값이 기본값으로 들어감.
  np.empty( tup, dtype ) # 해당 타입의 임의의 값으로 들어감
  #랜덤 생성 함수
   np.random.random(tup) : 0부터 1 미만의 균등분포를 갖는 랜덤값
   np.random.uniform(low=0, high=1.0, size=tup) : low부터 high미만의 균등분포를 갖는 랜덤값
   np.random.normal(loc=0, scale=1.0, size=tup) : 평균 loc과 표준편차scale을 갖는 정규분포 랜덤값
   np.random.rand(n) : 균등분포의 1차원 난수 배열 발생(난수 n개)
   np.random.randn(n) : 표준정규분포(평균0, 표준편차1인 정규분포)의 1차원 난수 배열 발생 (난수 n개)
   np.linspace(from, to, count, dtype) : from 부터 to까지 count개 1차원 배열
   np.arange(from, stop, step) : from부터 stop 앞까지 step 증감하는 1차원 배열

- 배열 차원 변경
  reshape()  # 해당 차원으로 변경. ex) arr.reshape(2, -1) => -1은 해당 차원의 크기가 자동 계산됨.
  resize( tup ) # : -1 불가, 배열 자체를 변경
  ravel(), flatten() : 1차원 변경
  transpose, T : 전치행렬
  ary[ : , np.newaxis] == np.expand_dims(ary, axis=1) 차원증가

- 배열 연산
  요소별 연산
  행렬연산(2차원) @(dot함수), 단위행렬(정발행렬)
  범용함수 np.add(), np.multiply(), np.substract(), np.sqrt()

- 배열 합치기
  np.vstack(tup)
  np.hstack(tup)
  np.dstack(tup) : 마지막 축(열)들끼리 합침

  np.column_stack(tup) : 1차원 배열을 열단위로 배열하여 2차원으로 합침
  np.row_stack(tup) : 행단위로 합침
  np.stack(tup, axis)
  
  np.r_[a, b,..] : row단위로 쌓음
  np.c_[a, b,..] : 컬럼으로 쌓아서 합침

- 배열 분리하기
  np.vsplit(ary, 정수나 인덱스벡터) == np.split(ary, 정수나 인덱스벡터, axis=0)
  np.hsplit(ary, 정수나 인덱스벡터) == np.split(ary, 정수나 인덱스벡터, axis=1)
  np.dsplit(ary, 정수나 인덱스벡터) == np.split(ary, 정수나 인덱스벡터, axis=-1)
  np.array_split(ary, 정수나 인덱스벡터, axis) : 나눠지지 않는 정수로도 split 가능